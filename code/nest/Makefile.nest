# This is part of a GNU Makefile, included by the Makefiles in
# each of the subdirectories.  
#
# This file includes all of the baseline code provided by Nachos.
# Whenever you add a .h or .cc file, put it in the appropriate 
# _H,_C, or _O list.
#
# The dependency graph between assignments is:
#   1. THREADS before everything else
#   2. USERPROG must come before VM
#   3. USERPROG can come before or after FILESYS, but if USERPROG comes 
#	before (as in this distribution), then it must define FILESYS_STUB
#
#   Other than that, you have complete flexibility.
#
# Also whenever you change the include structure of your program, you should 
# do a gmake depend in the subdirectory -- this will modify the Makefile
# to keep track of the new dependency.

# You might want to play with the CFLAGS, but if you use -O it may
# break the thread system.  You might want to use -fno-inline if
# you need to call some inline functions from the debugger.

# Copyright (c) 1992 The Regents of the University of California.
# All rights reserved.  See copyright.h for copyright notice and limitation 
# of liability and disclaimer of warranty provisions.

CFLAGS = -g -Wall -Wshadow -fpermissive $(INCPATH) $(DEFINES) $(HOST) -DCHANGED -m32

# These definitions may change as the software is updated.
# Some of them are also system dependent
CPP= gcc -E
CC = g++
LD = g++
AS = as

THREAD_H =../../threads/copyright.h\
	../../threads/list.h\
	../../threads/scheduler.h\
	../../threads/synch.h \
	../../threads/synchlist.h\
	../../threads/system.h\
	../../threads/thread.h\
	../../threads/utility.h\
	../../machine/interrupt.h\
	../../machine/sysdep.h\
	../../machine/stats.h\
	../../machine/timer.h\
	../../machine/elevator.h\
	../../machine/elevatortest.h

THREAD_C =../../threads/list.cc\
	../../threads/scheduler.cc\
	../../threads/synch.cc \
	../../threads/synchlist.cc\
	../../threads/system.cc\
	../../threads/thread.cc\
	../../threads/utility.cc\
	../../threads/threadtest.cc\
	../../machine/interrupt.cc\
	../../machine/sysdep.cc\
	../../machine/stats.cc\
	../../machine/timer.cc\
	../../machine/elevatortest.cc\
	../../machine/elevator.cc

THREAD_S = ../../threads/switch.s

THREAD_O =list.o scheduler.o synch.o synchlist.o system.o thread.o \
	utility.o threadtest.o interrupt.o stats.o sysdep.o timer.o elevator.o \
	elevatortest.o

USERPROG_H = ../../userprog/addrspace.h\
	../../userprog/bitmap.h\
	../../filesys/filesys.h\
	../../filesys/openfile.h\
	../../machine/console.h\
	../../machine/machine.h\
	../../machine/mipssim.h\
	../../machine/translate.h

USERPROG_C = ../../userprog/addrspace.cc\
	../../userprog/bitmap.cc\
	../../userprog/exception.cc\
	../../userprog/progtest.cc\
	../../machine/console.cc\
	../../machine/machine.cc\
	../../machine/mipssim.cc\
	../../machine/translate.cc

USERPROG_O = addrspace.o bitmap.o exception.o progtest.o console.o machine.o \
	mipssim.o translate.o

VM_H = 
VM_C = 
VM_O = 

FILESYS_H =../../filesys/directory.h \
	../../filesys/filehdr.h\
	../../filesys/filesys.h \
	../../filesys/openfile.h\
	../../filesys/synchdisk.h\
	../../machine/disk.h
FILESYS_C =../../filesys/directory.cc\
	../../filesys/filehdr.cc\
	../../filesys/filesys.cc\
	../../filesys/fstest.cc\
	../../filesys/openfile.cc\
	../../filesys/synchdisk.cc\
	../../machine/disk.cc
FILESYS_O =directory.o filehdr.o filesys.o fstest.o openfile.o synchdisk.o\
	disk.o

NETWORK_H = ../../network/post.h ../../machine/network.h
NETWORK_C = ../../network/nettest.cc ../../network/post.cc ../../machine/network.cc
NETWORK_O = nettest.o post.o network.o

S_OFILES = switch.o

OFILES = $(C_OFILES) $(S_OFILES)

$(C_OFILES): %.o:
	$(CC) $(CFLAGS) -c $<

switch.o: ../../threads/switch.s
	$(CPP) -P $(INCPATH) $(HOST) ../../threads/switch.c > swtch.s
	$(AS) --32 -o switch.o swtch.s

depend: $(CFILES) $(HFILES)
	$(CC) $(INCPATH) $(DEFINES) $(HOST) -DCHANGED -M $(CFILES) > makedep
	echo '/^# DO NOT DELETE THIS LINE/+2,$$d' >eddep
	echo '$$r makedep' >>eddep
	echo 'w' >>eddep
	ed - $(word 1,$(MAKEFILE_LIST)) < eddep
	rm eddep makedep 
	echo '# DEPENDENCIES MUST END AT END OF FILE' >> $(word 1,$(MAKEFILE_LIST))
	echo '# IF YOU PUT STUFF HERE IT WILL GO AWAY' >> $(word 1,$(MAKEFILE_LIST))
	echo '# see make depend above' >> $(word 1,$(MAKEFILE_LIST))

clean:
	rm -f *.o *.result swtch.s nachos_test

# converts a COFF file to Nachos object format
coff2noff: ../../bin/coff2noff.c
	gcc -I../../threads -I../../bin -g -m32 ../../bin/coff2noff.c -o coff2noff

RESULTS = $(addsuffix .result,$(TESTS))
nest: $(RESULTS)

CROSS_GCCDIR = ../gnu-decstation-ultrix/decstation-ultrix/2.95.3/
CROSS_CC = $(CROSS_GCCDIR)gcc -B../gnu-decstation-ultrix/
CROSS_AS = $(CROSS_GCCDIR)as
CROSS_LD = $(CROSS_GCCDIR)ld

CROSS_CPP = gcc -E
CROSS_INCDIR =-I../../userprog -I../../threads
CROSS_CFLAGS = -G 0 -c $(CROSS_INCDIR)
CROSS_LDFLAGS = -T script -N
CROSS_ASFLAGS = -mips2
CROSS_CPPFLAGS = $(CROSS_INCDIR)

start.o: ../../test/start.s ../../userprog/syscall.h
	$(CROSS_CPP) $(CROSS_CPPFLAGS) ../../test/start.c > strt.s
	$(CROSS_AS) $(CROSS_ASFLAGS) -o start.o strt.s
	rm strt.s

%.result: %.cc $(OFILES)
	@TESTTYPE=`python -c "print \"$@\".split('.')[0].split('_')[-1]"`; \
	if [ "$$TESTTYPE" = "kernel" ]; then \
	$(CC) $(CFLAGS) -DTEST_IN_KERNEL -c ../nest_main.cc && \
	$(CC) $(CFLAGS) -DTEST_IN_KERNEL -c $(@:.result=.cc) && \
	$(LD) $(OFILES) $(LDFLAGS) $(@:.result=.o) nest_main.o -o nachos_test_$* && \
    rm -f $@ && touch $@; \
    else \
    $(MAKE) start.o && \
	$(CC) $(CFLAGS) -c ../nest_main.cc && \
	$(LD) $(OFILES) $(LDFLAGS) nest_main.o -o nachos_test_$* && \
	$(CROSS_CC) $(CROSS_CFLAGS) -c $(@:.result=.cc) && \
	$(CROSS_LD) $(CROSS_LDFLAGS) start.o $(@:.result=.o) -o $(@:.result=.coff) && \
    rm -f $@ && touch $@; \
	fi; 
	@# TODO: build nachos_test for test using userprog

%.result: %.c $(OFILES)
	@TESTTYPE=`python -c "print \"$@\".split('.')[0].split('_')[-1]"`; \
	if [ "$$TESTTYPE" = "kernel" ]; then \
	$(CC) $(CFLAGS) -DTEST_IN_KERNEL -c ../nest_main.cc && \
	$(CC) $(CFLAGS) -DTEST_IN_KERNEL -c $(@:.result=.cc) && \
	$(LD) $(OFILES) $(LDFLAGS) $(@:.result=.o) nest_main.o -o nachos_test_$* && \
    rm -f $@ && touch $@; \
    else \
    $(MAKE) start.o && \
	$(CC) $(CFLAGS) -c ../nest_main.cc && \
	$(LD) $(OFILES) $(LDFLAGS) nest_main.o -o nachos_test_$* && \
	$(CROSS_CC) $(CROSS_CFLAGS) -c $(@:.result=.c) && \
	$(CROSS_LD) $(CROSS_LDFLAGS) start.o $(@:.result=.o) -o $(@:.result=.coff) && \
    $(MAKE) coff2noff && \
    ./coff2noff $(@:.result=.coff) $(@:.result=.noff) && \
    rm -f $@ && touch $@; \
	fi; 
	@# TODO: build nachos_test for test using userprog
